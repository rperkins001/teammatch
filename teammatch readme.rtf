{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri0\sl259\slmult1\sa160\partightenfactor0

\f0\fs22 \cf0 11/11/2019\
New employees at a company first go through a training class before they go off and join different teams in the company. At the end of the training class, a job fair is held where teams get to know the new employees and new employees get to know the teams. At the end of the fair, each new employee will rank all the teams and each team will rank all the new employees.\uc0\u8232 \u8232 The goal is to match each new employee with a team while honoring the preferences from both parties. Write a program that accepts any number of teams/employees and automates the matching process. Assume we have an equal number of teams and new employees.\u8232 \u8232 The following describes one such approach.\u8232 \u8232 Sample:\u8232 \u8232 There are 2 teams: "Team 1" and "Team 2".\u8232 There are 2 employees: "Mike" and "Leo".\u8232 \u8232 Team1's 1st choice is Mike, 2nd choice is Leo.\u8232 Team2's 1st choice is Mike, 2nd choice is Leo.\u8232 \u8232 Mike's 1st choice is Team 1, 2nd choice is Team 2.\u8232 Leo's 1st choice is Team 2, 2nd choice is Team 1.\u8232 \u8232 The program is expected to print:\u8232 \u8232 Team 1 : Mike\u8232 Team 2 : Leo\u8232 Mike : Team 1\u8232 Leo : Team 2\u8232 """\u8232 }